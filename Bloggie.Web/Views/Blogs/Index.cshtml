@using Microsoft.AspNetCore.Identity
@inject SignInManager<IdentityUser> signInManager
@inject UserManager<IdentityUser> userManager
@using Microsoft.AspNetCore.Authorization

@model Bloggie.Web.Models.ViewModels.BlogDetailsViewModel


@{
    ViewData["Title"] = Model.PageTitle;
}


<div class="container my-5">
    <div class="row justify-content-center">
        <div class="col-12 col-lg-6">
            @if(Model != null)
            {
                
                <h1 class="mb-3">@Model.Heading</h1>
                
                <div class="d-flex justify-content-between mb-3">
                    <span class="text-secondary">@Model.Author</span>
                    <span class="text-secondary">@Model.PublishedDate.ToShortDateString()</span>
                </div>

                <div class="mb-3">
                    @if (signInManager.IsSignedIn(User))
                    {
                        @if(Model.Liked == true)
                        {                           
                            <a style="cursor:pointer"><i class="bi bi-hand-thumbs-up-fill"></i></a>
                        }
                        else
                        {
                            <a id="buttonlike" style="cursor:pointer"><i class="bi bi-hand-thumbs-up"></i></a>
                        }
                    }
                    <span id="totalLikesforblog">@Model.TotalLikes</span> likes
                </div>

                @foreach (var tags in Model.Tags)
                {
                    <span class="badge bg-secondary me-1 mb-3">@tags.Name</span>
                }

                <div class="d-flex justify-content-center mb-3">
                    <img src="@Model.FeaturedImageUrl" alt="Bloggie- Dev Blogs" class="img-fluid" />
                </div>

                <!-- Converts the string of html in raw form of html (html parser) -->
               <div class="blog-details-content">@Html.Raw(Model.Content)</div>

               <div class="card">
                    <div class="card-header">
                        <h5>Comments</h5>
                        @if (signInManager.IsSignedIn(User))
                        {
                            <form method="post">
                            @Html.AntiForgeryToken()
                                <div class="mb-3">
                                    <label class="form-label">Comment Description</label>
                                    <input type="text" class="form-control" asp-for="CommentDescription"/>
                                </div>
                                <div class="mb-3">
                                    <button type="submit" class="btn btn-dark">
                                        Submit
                                    </button>
                                    <input type="hidden" asp-for="Id"/>
                                    <input type="hidden" asp-for="UrlHandle">
                                </div>
                            </form>
                        }
                    </div>
                    <div class="card-body">
                        @if(Model != null && Model.Comments.Any())
                        {
                            @foreach(var comments in Model.Comments)
                            {
                                <div class="card mb-3">
                                    <div class="card-body">
                                        <div>
                                            @comments.Description
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <span class="text-secondary">@comments.UserName</span>
                                            <span class="text-secondary">@comments.DateAdded.ToShortDateString()</span>
                                        </div>
                                    </div>
                                </div>       
                            }
                        }
                    </div>
               </div>
            }
            else
            {
                <p> Nothing to show ! </p>
            }
        </div>
    </div>
</div>

@section Scripts{

    <script>
        const btnLikeElement = document.getElementById("buttonlike");
        const totallikesforblog = document.getElementById("totalLikesforblog");

        //calling the api controller get method from here
        async function GetTotalLikes()
        {
            await fetch("/api/BlogPostLike/@Model.Id/totalLikes", {
                method: 'GET',

                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                }

            }).then((data) => {
                return data.json();
            }).then((result) => {
                totallikesforblog.innerHTML = result
            });
        }

        //calling the api controller post method from here
        async function Addlikefunctionality() 
        {
            await fetch("/api/BlogPostLike/Add", {
                method: 'POST',

                headers: {
                    'Content-Type': 'application/json',
                    'Accept': '*/*'
                },

                body: JSON.stringify({
                    BlogPostId: '@Model?.Id',
                    UserId: '@userManager?.GetUserId(User)'
                })
            }).then(() => {
                btnLikeElement.innerHTML = `<i class="bi bi-hand-thumbs-up-fill" > </i>`
                btnLikeElement.removeEventListener('click', Addlikefunctionality);
                GetTotalLikes();
            });
        }
        
        btnLikeElement.addEventListener('click', Addlikefunctionality);

    </script>
}